/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MOCKERC721, MOCKERC721Interface } from "../MOCKERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mintUniqueTokenTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152694d4f434b45524337323160b01b6020808301918252835180850190945260048452634d4f434b60e01b90840152815191929162000060916000916200007f565b508051620000769060019060208401906200007f565b50505062000162565b8280546200008d9062000125565b90600052602060002090601f016020900481019282620000b15760008555620000fc565b82601f10620000cc57805160ff1916838001178555620000fc565b82800160010185558215620000fc579182015b82811115620000fc578251825591602001919060010190620000df565b506200010a9291506200010e565b5090565b5b808211156200010a57600081556001016200010f565b600181811c908216806200013a57607f821691505b602082108114156200015c57634e487b7160e01b600052602260045260246000fd5b50919050565b61159880620001726000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b6d5e8cd11610066578063b6d5e8cd146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004611390565b610256565b60405190151581526020015b60405180910390f35b61011f6102f3565b60405161010e9190611477565b61013f61013a3660046113c8565b610385565b6040516001600160a01b03909116815260200161010e565b61016a610165366004611367565b6103ac565b005b61016a61017a36600461121d565b6104e3565b61016a61018d36600461121d565b61055a565b61013f6101a03660046113c8565b610565565b6101b86101b33660046111d1565b6105ca565b60405190815260200161010e565b61011f610664565b61016a6101dc36600461132d565b610673565b61016a6101ef366004611367565b610682565b61016a610202366004611258565b61068c565b61011f6102153660046113c8565b61070a565b6101026102283660046111eb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102b957506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102ed57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b606060008054610302906114e5565b80601f016020809104026020016040519081016040528092919081815260200182805461032e906114e5565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b5050505050905090565b6000610390826107a3565b506000908152600460205260409020546001600160a01b031690565b60006103b782610565565b9050806001600160a01b0316836001600160a01b031614156104465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061046257506104628133610228565b6104d45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161043d565b6104de838361080a565b505050565b6104ed3382610885565b61054f5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161043d565b6104de838383610904565b6104de838383610b17565b6000818152600260205260408120546001600160a01b0316806102ed5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161043d565b60006001600160a01b0382166106485760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161043d565b506001600160a01b031660009081526003602052604090205490565b606060018054610302906114e5565b61067e338383610b32565b5050565b61067e8282610c01565b6106963383610885565b6106f85760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161043d565b61070484848484610da7565b50505050565b6060610715826107a3565b600061075160408051808201909152601681527f687474703a2f2f6c6f63616c686f73743a313233342f00000000000000000000602082015290565b90506000815111610771576040518060200160405280600081525061079c565b8061077b84610e30565b60405160200161078c92919061140c565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166108075760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161043d565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061084c82610565565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061089183610565565b9050806001600160a01b0316846001600160a01b031614806108d857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108fc5750836001600160a01b03166108f184610385565b6001600160a01b0316145b949350505050565b826001600160a01b031661091782610565565b6001600160a01b03161461097b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161043d565b6001600160a01b0382166109f65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161043d565b610a038383836001610ee8565b826001600160a01b0316610a1682610565565b6001600160a01b031614610a7a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161043d565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6104de8383836040518060200160405280600081525061068c565b816001600160a01b0316836001600160a01b03161415610b945760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161043d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038216610c575760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161043d565b6000818152600260205260409020546001600160a01b031615610cbc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043d565b610cca600083836001610ee8565b6000818152600260205260409020546001600160a01b031615610d2f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043d565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610db2848484610904565b610dbe84848484610f70565b6107045760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161043d565b60606000610e3d836110d3565b600101905060008167ffffffffffffffff811115610e6b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e95576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610edb57610ee0565b610e9f565b509392505050565b6001811115610704576001600160a01b03841615610f2e576001600160a01b03841660009081526003602052604081208054839290610f289084906114a2565b90915550505b6001600160a01b03831615610704576001600160a01b03831660009081526003602052604081208054839290610f6590849061148a565b909155505050505050565b60006001600160a01b0384163b156110c857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fb490339089908890889060040161143b565b602060405180830381600087803b158015610fce57600080fd5b505af1925050508015610ffe575060408051601f3d908101601f19168201909252610ffb918101906113ac565b60015b6110ae573d80801561102c576040519150601f19603f3d011682016040523d82523d6000602084013e611031565b606091505b5080516110a65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161043d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108fc565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061111c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611148576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061116657662386f26fc10000830492506010015b6305f5e100831061117e576305f5e100830492506008015b612710831061119257612710830492506004015b606483106111a4576064830492506002015b600a83106102ed5760010192915050565b80356001600160a01b03811681146111cc57600080fd5b919050565b6000602082840312156111e2578081fd5b61079c826111b5565b600080604083850312156111fd578081fd5b611206836111b5565b9150611214602084016111b5565b90509250929050565b600080600060608486031215611231578081fd5b61123a846111b5565b9250611248602085016111b5565b9150604084013590509250925092565b6000806000806080858703121561126d578081fd5b611276856111b5565b9350611284602086016111b5565b925060408501359150606085013567ffffffffffffffff808211156112a7578283fd5b818701915087601f8301126112ba578283fd5b8135818111156112cc576112cc611536565b604051601f8201601f19908116603f011681019083821181831017156112f4576112f4611536565b816040528281528a602084870101111561130c578586fd5b82602086016020830137918201602001949094529598949750929550505050565b6000806040838503121561133f578182fd5b611348836111b5565b91506020830135801515811461135c578182fd5b809150509250929050565b60008060408385031215611379578182fd5b611382836111b5565b946020939093013593505050565b6000602082840312156113a1578081fd5b813561079c8161154c565b6000602082840312156113bd578081fd5b815161079c8161154c565b6000602082840312156113d9578081fd5b5035919050565b600081518084526113f88160208601602086016114b9565b601f01601f19169290920160200192915050565b6000835161141e8184602088016114b9565b8351908301906114328183602088016114b9565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261146d60808301846113e0565b9695505050505050565b60208152600061079c60208301846113e0565b6000821982111561149d5761149d611520565b500190565b6000828210156114b4576114b4611520565b500390565b60005b838110156114d45781810151838201526020016114bc565b838111156107045750506000910152565b600181811c908216806114f957607f821691505b6020821081141561151a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461080757600080fdfea2646970667358221220186629c0c369dd3ed4faf6c1f3c1b346ff0f94120ada481261e8fd8a4cc7d26e64736f6c63430008040033";

export class MOCKERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MOCKERC721> {
    return super.deploy(overrides || {}) as Promise<MOCKERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MOCKERC721 {
    return super.attach(address) as MOCKERC721;
  }
  connect(signer: Signer): MOCKERC721__factory {
    return super.connect(signer) as MOCKERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MOCKERC721Interface {
    return new utils.Interface(_abi) as MOCKERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MOCKERC721 {
    return new Contract(address, _abi, signerOrProvider) as MOCKERC721;
  }
}
