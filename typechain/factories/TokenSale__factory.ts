/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenSale, TokenSaleInterface } from "../TokenSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_wallet_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526127106005556a295be96e6406697200000060065534801561002557600080fd5b506040516109ac3803806109ac833981016040819052610044916100fc565b60016000556001600160a01b03821661008a5760405162461bcd60e51b815260206004820152600360248201526207268760eb1b60448201526064015b60405180910390fd5b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152600360248201526207268760eb1b6044820152606401610081565b600280546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055600060045561014d565b6000806040838503121561010e578182fd5b825161011981610135565b602084015190925061012a81610135565b809150509250929050565b6001600160a01b038116811461014a57600080fd5b50565b6108508061015c6000396000f3fe6080604052600436106100695760003560e01c8063de5f986611610043578063de5f9866146100db578063ee7c0db0146100f0578063fc0c546a1461010557600080fd5b80634042b66f1461007d578063521eb273146100a1578063d0febe4c146100d357600080fd5b3661007857610076610123565b005b600080fd5b34801561008957600080fd5b506003545b6040519081526020015b60405180910390f35b3480156100ad57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610098565b610076610123565b3480156100e757600080fd5b5061008e61022b565b3480156100fc57600080fd5b5060045461008e565b34801561011157600080fd5b506001546001600160a01b03166100bb565b61012b610249565b3461013633826102a3565b60006101418261034a565b905060065461015b6004548361036090919063ffffffff16565b11156101ae5760405162461bcd60e51b815260206004820152601560248201527f4578636565647320616c6c6f776564206c696d6974000000000000000000000060448201526064015b60405180910390fd5b6004546101bb9082610360565b6004556003546101cb9083610360565b6003556101d83382610373565b6040805183815260208101839052339182917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a361021d61037d565b50506102296001600055565b565b60006102446004546006546103b990919063ffffffff16565b905090565b6002600054141561029c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101a5565b6002600055565b6001600160a01b0382166102f95760405162461bcd60e51b815260206004820152600360248201527f393438000000000000000000000000000000000000000000000000000000000060448201526064016101a5565b806103465760405162461bcd60e51b815260206004820152600360248201527f393439000000000000000000000000000000000000000000000000000000000060448201526064016101a5565b5050565b60055460009061035a90836103c5565b92915050565b600061036c8284610771565b9392505050565b61034682826103d1565b6002546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156103b6573d6000803e3d6000fd5b50565b600061036c82846107a8565b600061036c8284610789565b600254600154604080516001600160a01b0393841660248201819052868516604483015260648083018790528351808403909101815260849092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905261034693909216918590859061046e908590610474565b50505050565b60006104c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661055e9092919063ffffffff16565b80519091501561055957808060200190518101906104e79190610702565b6105595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101a5565b505050565b606061056d8484600085610575565b949350505050565b6060824710156105ed5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101a5565b600080866001600160a01b031685876040516106099190610722565b60006040518083038185875af1925050503d8060008114610646576040519150601f19603f3d011682016040523d82523d6000602084013e61064b565b606091505b509150915061065c87838387610667565b979650505050505050565b606083156106d35782516106cc576001600160a01b0385163b6106cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101a5565b508161056d565b61056d83838151156106e85781518083602001fd5b8060405162461bcd60e51b81526004016101a5919061073e565b600060208284031215610713578081fd5b8151801515811461036c578182fd5b600082516107348184602087016107bf565b9190910192915050565b602081526000825180602084015261075d8160408501602087016107bf565b601f01601f19169190910160400192915050565b60008219821115610784576107846107eb565b500190565b60008160001904831182151516156107a3576107a36107eb565b500290565b6000828210156107ba576107ba6107eb565b500390565b60005b838110156107da5781810151838201526020016107c2565b8381111561046e5750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212209fdfc0ebec699d01729f705cd9c3350b616b80173b00fd798a3198229413efb864736f6c63430008040033";

export class TokenSale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _wallet_: string,
    _token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenSale> {
    return super.deploy(
      _wallet_,
      _token_,
      overrides || {}
    ) as Promise<TokenSale>;
  }
  getDeployTransaction(
    _wallet_: string,
    _token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wallet_, _token_, overrides || {});
  }
  attach(address: string): TokenSale {
    return super.attach(address) as TokenSale;
  }
  connect(signer: Signer): TokenSale__factory {
    return super.connect(signer) as TokenSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSaleInterface {
    return new utils.Interface(_abi) as TokenSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSale {
    return new Contract(address, _abi, signerOrProvider) as TokenSale;
  }
}
